class Solution {
public:
    int mod = 1e9 + 7;
    int dfs(int i, string& s, int k, int n, vector<int>& dp) {
        if (i == n) return 1;
        if (s[i] == '0') return 0;

        if (dp[i] != -1) return dp[i];

        int ans = 0;
        long num = 0;
        for (int j = i; j < n; j++) {
            num = num * 10 + s[j] - '0';
            if (num > k) break;
            ans = (ans + dfs(j + 1, s, k, n, dp)) % mod;
        }

        return dp[i] = ans;
    }
    int numberOfArrays(string s, int k) {
        int n = s.size();
        vector<int> dp(n, -1);
        return dfs(0, s, k, n, dp);
    }
};

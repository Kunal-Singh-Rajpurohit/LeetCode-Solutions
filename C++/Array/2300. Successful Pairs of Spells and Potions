class Solution {
public:
    vector<int> successfulPairs(vector<int>& spells, vector<int>& potions, long long success) {
        
        // brute force 
        // vector<int>ans(spells.size(),0);
        // for(int i=0;i<spells.size();i++){
        //     for(int j=0;j<potions.size();j++){
        //         if(spells[i]*potions[j] >= success){
        //             ans[i]++;
        //         }
        //     }
        // }
        // return ans;

        // Optimised
        // sorting 
        sort(potions.begin(),potions.end());

        vector<int>ans(spells.size());
        for(int i=0;i<spells.size();i++){
            int s = 0,e=potions.size()-1,m,cnt=0;
            while(s<=e){
                m = s+(e-s)/2;
                if( (long long int)spells[i]*(long long int)potions[m] >= success ){
                    e=m-1;
                }
                else s=m+1;
            }
            ans[i] = potions.size()-1-e;
        }
        return ans;
    }
};

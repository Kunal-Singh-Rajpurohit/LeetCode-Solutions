/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int sumNumbers(TreeNode* root) {
        return dfs(root, 0);
    }

    int dfs(TreeNode* node, int currentVal) {
        if (!node->left && !node->right) {
            return currentVal + node->val;
        }

        int sum = 0;
        if (node->left) {
            sum += dfs(node->left, (currentVal + node->val) * 10);
        }
        if (node->right) {
            sum += dfs(node->right, (currentVal + node->val) * 10);
        }

        return sum;
    } 
};
